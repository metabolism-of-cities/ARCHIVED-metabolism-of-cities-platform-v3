# Generated by Django 2.1.2 on 2018-10-28 02:11

import django.contrib.sites.managers
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, unique=True)),
                ('introduction', models.TextField(blank=True, null=True)),
                ('content', tinymce.models.HTMLField(verbose_name='Content')),
                ('image', models.ImageField(blank=True, null=True, upload_to='articles')),
                ('active', models.BooleanField(default=True)),
                ('section', models.CharField(choices=[('about', 'About'), ('community', 'Community'), ('resources', 'Resources'), ('cities', 'Cities'), ('whatwedo', 'What We Do'), ('newsevents', 'News and Events')], default='about', max_length=20)),
                ('date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['title'],
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('on_site', django.contrib.sites.managers.CurrentSiteManager()),
            ],
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('css', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Journal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('website', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='journals')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('type', models.CharField(choices=[('academic', 'Academic Institution'), ('universities', 'Universities'), ('city_government', 'City Government'), ('regional_government', 'Regional Government'), ('national_government', 'National Government'), ('statistical_agency', 'Statistical Agency'), ('private_sector', 'Private Sector'), ('publisher', 'Publishers'), ('ngo', 'NGO'), ('other', 'Other')], max_length=20)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='People',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=255)),
                ('lastname', models.CharField(max_length=255)),
                ('affiliation', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('email_public', models.BooleanField()),
                ('profile', models.TextField(blank=True, null=True)),
                ('research_interests', models.TextField(blank=True, null=True)),
                ('website', models.CharField(blank=True, max_length=255, null=True)),
                ('twitter', models.CharField(blank=True, max_length=255, null=True)),
                ('google_scholar', models.CharField(blank=True, max_length=255, null=True)),
                ('orcid', models.CharField(blank=True, max_length=255, null=True)),
                ('researchgate', models.CharField(blank=True, max_length=255, null=True)),
                ('linkedin', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('member_since', models.DateField(blank=True, db_index=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='people')),
                ('status', models.CharField(choices=[('active', 'Active'), ('retired', 'Retired'), ('deceased', 'Deceased'), ('inactive', 'Inactive')], default='active', max_length=8)),
            ],
        ),
        migrations.CreateModel(
            name='PeopleAffiliation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.PositiveSmallIntegerField()),
                ('end', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('institution', models.CharField(blank=True, max_length=255, null=True)),
                ('researcher', models.CharField(blank=True, max_length=255, null=True)),
                ('supervisor', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('target_finish_date', models.CharField(blank=True, max_length=255, null=True)),
                ('description', tinymce.models.HTMLField(blank=True, null=True, verbose_name='description')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('ongoing', 'In progress'), ('finished', 'Finished'), ('cancelled', 'Cancelled')], default='ongoing', max_length=20)),
                ('active', models.BooleanField(default=True)),
                ('pending_review', models.BooleanField(default=True)),
                ('type', models.CharField(choices=[('research', 'Individual research project'), ('regular', 'Regular project')], max_length=20)),
            ],
            options={
                'ordering': ['name'],
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('on_site', django.contrib.sites.managers.CurrentSiteManager()),
            ],
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_original_language', models.CharField(max_length=255)),
                ('authorlist', models.TextField()),
                ('year', models.PositiveSmallIntegerField()),
                ('abstract', models.TextField(blank=True, null=True)),
                ('abstract_original_language', models.TextField(blank=True, null=True)),
                ('date_added', models.DateTimeField(blank=True, null=True)),
                ('language', models.CharField(choices=[('EN', 'English'), ('ES', 'Spanish'), ('CH', 'Chinese'), ('FR', 'French'), ('GE', 'German'), ('OT', 'Other')], max_length=2)),
                ('open_access', models.NullBooleanField()),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('doi', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('active', 'Active'), ('deleted', 'Deleted')], max_length=8)),
            ],
        ),
        migrations.CreateModel(
            name='ReferenceOrganization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('publisher', 'Publisher'), ('commissioner', 'Commissioner'), ('organization', 'Organization')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='ReferenceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('icon', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('gps', models.CharField(max_length=255)),
                ('parent', models.CharField(choices=[(1, 'Publication Types'), (2, 'Metabolism Studies'), (3, 'Countries'), (4, 'Cities'), (5, 'Scales'), (6, 'Flows'), (7, 'Time Horizon'), (9, 'Methodologies'), (10, 'Other')], max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Timeline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('link', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='UserAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='UserLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('points', models.PositiveSmallIntegerField()),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UserAction')),
                ('reference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Reference')),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('url', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('author', models.CharField(max_length=255)),
                ('date', models.DateField(null=True)),
                ('website', models.CharField(max_length=255)),
                ('people', models.ManyToManyField(to='core.People')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sites.Site')),
            ],
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('on_site', django.contrib.sites.managers.CurrentSiteManager()),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('article', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='event', serialize=False, to='core.Article')),
                ('start', models.DateTimeField(blank=True, null=True)),
                ('end', models.DateTimeField(blank=True, null=True)),
                ('type', models.CharField(choices=[('conference', 'Conference'), ('hackathon', 'Hackathon'), ('workshop', 'Workshop'), ('seminar', 'Seminar'), ('other', 'Other')], max_length=20)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
    ]
